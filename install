#!/bin/sh

## NOTE sh NOT bash. This script should be POSIX sh only, since we don't
## know what shell the user has. Debian uses 'dash' for 'sh', for
## example.

VERSION="0.0.3"
PKGVERSION="${VERSION}-1"

UNAME=`uname`
if [ "$UNAME" != "Darwin" ] ; then
  echo "Sorry, this OS is not supported yet."
  exit 1
fi

### OSX ###

TARGET="/usr/local/tility"
PARENT="/usr/local"

if [ -e "$TARGET" ] ; then
  echo "Updating Tility in $TARGET"
else
  echo "Installing Tility to $TARGET"
fi

# if /usr/local doesn't exist or isn't writable, fix it with sudo.
if [ ! -d "$PARENT" ] ; then
  echo
  echo "$PARENT does not exist. Creating it with 'sudo mkdir'."
  echo "This may prompt for your password."
  echo
  sudo /bin/mkdir "$PARENT"
  sudo /usr/bin/chgrp admin "$PARENT"
  sudo /bin/chmod 775 "$PARENT"
elif [ ! -w "$PARENT" -o ! -w "$PARENT/bin" ] ; then
  echo
  echo "The install script needs to change the permissions on $PARENT so that"
  echo "administrators can write to it. This may prompt for your password."
  echo
  sudo /usr/bin/chgrp admin "$PARENT"
  sudo /bin/chmod g+rwx "$PARENT"
  if [ -d "$PARENT/bin" ] ; then
    sudo /usr/bin/chgrp admin "$PARENT/bin"
    sudo /bin/chmod g+rwx "$PARENT/bin"
  fi
fi

# remove old version
if [ -e "$TARGET" ] ; then
  rm -rf "$TARGET"
fi

# make sure target exists and is directory
mkdir -p "$TARGET" || true
if [ ! -d "$TARGET" -o ! -w "$TARGET" ] ; then
  echo "can't write to $TARGET"
  exit 1
fi

# git clone
git clone git@github.com:theablefew/tility.git "$TARGET"

# add to $PATH
mkdir -p "$PARENT/bin"
rm -f "$PARENT/bin/tility"
ln -s "$TARGET/tility" "$PARENT/bin/tility"

# Install NPM Modules
cd "$TARGET"
npm install